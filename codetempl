#!/bin/bash

source util.sh

[ -z $CODETEMPL_ROOT ] && env_var_not_set

[ -z $1 ] && usage_abort
[ $1 == "help" ] && help_message
file_requests=$@

definitions=$CODETEMPL_ROOT/languages.config

languages=$( strip_file_contents $definitions | awk '{print $1}' )
file_extensions=$( strip_file_contents $definitions | awk '{print $2}' )


declare -A extension_dict
exts=($file_extensions)
i=0; for lang in $languages; do
	extension_dict[$lang]=${exts[$i]}
	i=$(( $i + 1 ))
done; unset exts


for entry in $file_requests
do
	if item_in_list $entry $languages
	then
		echo 'going off language based on language'
		ext=${extension_dict[$entry]}
		contents=$(source_file $ext)
		filename="code.$ext"

	elif item_in_list $entry $file_extensions
	then
		echo 'going off language based on file extension'
		ext=$entry
		contents=$(source_file $ext)
		filename="code.$ext"

	elif item_in_list $(file_extension $entry) $file_extensions
	then
		echo 'going off filename'
		ext=$(file_extension $entry)
		contents=$(source_file $ext)
		filename=$entry

	else
		echo "invalid input: $entry"
		exit 1
	fi

	if [ ! -f $filename  ]
	then
		echo "none exist. will make"
		cp $contents $filename
		if [ $(file_extension $filename) = 'java' ]
		then
			if [ $filename != 'code.java' ]
			then
				sed -i "s/class Code/public class ${filename//.java/}/" $filename 
			fi
		fi
	else
		echo "file '$filename' already exists"
	fi

done

